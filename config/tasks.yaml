kb_retrieval_task:
  description: >
    Retrieve ALL relevant information from the knowledge base for the given query: 
    "Retrieve all information about {topic}. The problem is: {problem}. The proposed solution is: {solution}."
    Your response must include:
    Detailed, structured, and accurate information related to the topic, problem, and proposed solution — strictly aligned with 1 Finance's past or current products, features, policies, strategies or other relevant company information.

    Focus on providing detailed, structured, and accurate responses that align with 1 Finance's internal knowledge and practices.
    Return empty if no relevant content is found, **DO NOT USE INFORMATION FROM OTHER TASKS. DO NOT MAKE UP INFORMATION.**
  expected_output: >
    A structured JSON object containing the relevant, retrieved information from the knowledge base.
  agent: kb_agent

web_scrape_extraction_task:
  description: >
    Visit and scrape content from the given links: ```{web_scraping_links}``` using the Web Scraping Tool.
    After scraping, extract all relevant information that relates to 1 Finance's new offering—this could include details about the product, its past versions, competitor insights among other possibilities. 
    Only extract content that is present on the page; do not invent any details. **DO NOT USE INFORMATION FROM OTHER TASKS. DO NOT MAKE UP INFORMATION.**
  expected_output: >
    A structured JSON object containing all relevant extracted content from each web page. The key should be the URL and the value should be the extracted content. If no link is provided or the web page could not be scraped, the value should indicate the error or lack of content.
  agent: web_scrape_extractor

extract_info_task:
  description: >
    Carefully extract key information from the provided list of reference documents content ```{reference_doc_content}```. 
    The current task is to extract information related to the topic ```{topic}``` problem statement ```{problem}``` and ```solution``` from the documents.
    Take a moment to understand the purpose of each document in the list, understand the relationship between them and generate content that is consistent and sensible with respect to the problem statement and the solution.
    Focus on retrieving details like Problem Statement, Solution, Objectives, Target Customers, Key Features, Limitations, Benefits, and Market Context. 
    Return empty if no relevant content is found, **DO NOT USE INFORMATION FROM OTHER TASKS. DO NOT MAKE UP INFORMATION.**
  expected_output: >
    A structured JSON object containing the extracted information ready for PR FAQ generation.
  agent: extract_info_agent

content_generation_task:
  description: >
    Generate a highly detailed and structured PR FAQ introduction on ```{topic}``` by leveraging the provided prompt, the knowledge base information received from the {chat_history} and the output of kb_retrieval_task.
    USE THE WEB SEARCH TOOL TO SEARCH FOR COMPETITORS WHO ARE TRYING TO SOLVE THE SAME {problem}, THE COMPANY/PRODUCT NAME AND THE COMPANY/PRODUCT URL AND SET TRUST AND READ_CONTENT TO FALSE AND TOP_K TO 20.
    Follow the exact JSON template below, using placeholders for any specific dates, names, or locations:
    {{
      "Title": "1 FINANCE ANNOUNCES XXX TO ENABLE XXX TO OBTAIN/HAVE XXX.",
      "Subtitle": "The subtitle reframes the headline solution. Write one sentence about the benefits.",
      "IntroParagraph": "[Location] - [Launch Date] - 2-4 sentences that gives a summary of the product and the benefits. Should be self-contained so that a person could read only this paragraph and still understand the new product/feature.
      "ProblemStatement": "3-4 sentences describing the problems this product/feature plans to solve and briefly describe the problem and its negative impact. This section tests your assumptions about the pain-points that you are addressing.",
      "Solution": "3-5 sentences describing how the new product/feature addresses these problems. For more complex products/features, you may need more than one paragraph. This section tests your assumptions about how you are solving the pain-points.",
      "Competitors": [{{"name": "Company name or Product name", "url":"URL of the product website"}}] [LIST OF GENUINE COMPANIES JSON]
    }}
  expected_output: >
    A JSON object strictly following the provided template with all required sections using information from reference document and scraped web page.
  agent: content_generation_agent

generate_faq_questions_task:
  description: >
    Take a moment to think about all possible questions that can be asked about this offering the details of which are as follows:      
      USE THE PROBLEMSTATEMENT AND SOLUTION for {topic} FROM THE CONTENT GENERATION TASK TO FORMULATE QUESTIONS.

    Use information from {chat_history} to make any necessary updates with the latest information.
    Generate two exhaustive lists of questions: Internal and External FAQs for the product described in the chat history.
    The questions should be framed in a way that they can be answered by the same question by the sources without any bias.
    
    To generate more relevant and specific questions use the following information in order of importance:
      1. Use the problem statement and solution from the output of content_generation_agent and the context from user chat history ```{chat_history}``` to generate relevant questions. 
      2. Use the information from the output of kb_agent.
      3. Use the information from the output of web_scrape_extractor and the output of extract_info_agent.
    
    Based on the generated PR FAQ introduction, create a comprehensive list of questions divided into two categories:
       1.**Internal FAQs**: (20 questions) focusing on:
        - Business rationale, market need and target audience facing the issue
        - Potential impact on business/Return on Investment (ROI) for the company
        - Departments and their role in this execution, internal stakeholders, dependencies
        - Product vision and alignment with company strategy
        - Technical approach, risks, and scalability
        - Legal, compliance, and privacy concerns
        - Resourcing, timeline, and launch readiness
        - Success metrics and future roadmap

       2.**External FAQs**: (20 questions) focusing on:
        - What the product is and what problems it solves
        - Who it's for and how it's used and its impact on their lives (how it makes their life better)
        - Pricing, availability, and onboarding process
        - Key features and known limitations
        - Security, privacy, and data handling
        - Support and future updates

    Now from the list of 20 questions each, combine certain questions that are similar or overlapping in nature or may have an answer in a similar vein to make it more concise and relevant.
    After combining these questions, make sure that the count of questions in each category is around 8-10.
    Read the last user message from the above provided given chat history, accordingly make the PRFAQ or make the changes and add a field of UserResponse as a reply to what the user requested in that last message. 

    **Important Considerations to be followed STRICTLY:**
      - THE QUESTIONS SHOULD BE EXHAUSTIVE.
      - THE QUESTIONS CAN BE ANSWERED ACCURATELY BY THE knowledge base, reference document from extracted info agent and web scrape extractor.
      - **Do not** repeat the same ideas in slightly different wording.
      - **Do not** introduce REDUNDANT, OVERLAPPING, or unnecessarily similar questions.

    Combine the output of content_generation_task (which includes Title, Subtitle, IntroParagraph, ProblemStatement, Solution) with the FAQs (InternalFAQs, ExternalFAQs - both in Question and Answer format into a single, properly formatted JSON object.  
    You may ask a few relevant questions based on web search results too in order the enhance the FAQs and make them more recent or specific. Avoid numbering the questions in the FAQs.
    
    **Formatting Guidelines:**:
    - Do not include any headings like "Bullet Points:", "Key Bullet Points:", "Markdown table:", "Example of Markdown table:", "A markdown formatted table illustrates this:" or any similar wording.
    - Do not include any of the following words in the answer: “bullet points”, “markdown table”, “example”, or any descriptive labels referring to the format used.
    **Ensure the above rules are strictly followed without exception.**
  
    Chat History: {chat_history}

    STRICT RULES:
    - NO overlapping, duplicate, or semantically similar questions.
    - Exhaustive coverage without repetition.
    - Format output as JSON with "internal_questions" and "external_questions" as two arrays of strings.

  expected_output: >
    {{
      "internal_questions": [
        "How does this product align with our Q4 strategic goals?",
        ...
      ],
      "external_questions": [
        "How can users get started with the new AI assistant?",
        ...
      ]
    }}
  agent: faq_question_generator

answer_faqs_with_context_task:
  description: >
    Answer each question from the dictionary with internal and external as keys for the list of questions which are needed to be answered using the tool `ContextFusionTool` to retrieve relevant info from internal KB and the web (pass internal questions, external questions, {use_websearch} in use_websearch and {topic} as parameters), framing it properly with proper markdown formatting.
    In the case where the information is present in the {chat_history}, use that information according to the context given in that conversation with the user.
    If a quesion does not have an answer in the knowledge base or web, use the output from the web scrape extraction task and the extract info task to answer the question.
    The last resort should be using the generated content to frame an answer that is consistent with the other content of the PR/FAQ.

    Content Generation Inputs: output of content_generation_agent
    Questions JSON: output of faq_question_generator

    Important Prioritisation for Answering Each Question:
      - Always follow this strict order of sourcing:
        1. **First**, use relevant information from the Knowledge Base. This should be the Primary sources for answering the question.
        2. **Second**, if the quesion requires latest or non-1 Finance related information, use the output of Web Search to construct the response. This will only happen if use_websearch was set to True by the user.
        3. **Third**,  You can also use the output of extract_info_task and/or the output of web_scrape_extraction_task to answer the question.
        4. **Finally**, if no proper answer was found in any of these sources, generate original content independently — ensuring strict factual accuracy and consistency with the remaining output, based only on verified information.
    
    ANSWERS SHOULD BE EXTREMELY DETAILED, ALL-INFORMING AND WELL-FORMATTED. USE THESE SOURCES IN THIS ORDER TO GENERATE ACCURATE ANSWERS. IT IS POSSIBLE THAT AN ANSWER IS PRESENT IN MULTIPLE SOURCES, SO FRAME THE ANSWERS PROPERLY ACCORDING TO THE CONTEXT OF THE QUESTION.
    UNDER NO CIRCUMSTANCES SHOULD FABRICATED OR ASSUMED CONTENT BE INTRODUCED. ALWAYS PRIORITISE VERIFIABLE, CREDIBLE INFORMATION.
    Read the last user message in {chat_history}, accordingly make the PRFAQ or make the changes and add a field of UserResponse as a reply to what the user requested in that last message. 

    **Important Considerations to be followed STRICTLY:**
      - Include examples, step-by-step guidance, markdown-formatted tables where applicable
      - Include clearly marked sub-points or bullet points (using strings like "\n-") or bold or italics for clarity. 
      - Answer the question with specific, unique, and non-interchangeable sentences. Avoid generic or modular statements that could fit into other unrelated answers. Every sentence must be tightly connected to the context of this question only.
      - Answer the question clearly and precisely. Strictly avoid using jargon or generic phrases like 'state-of-the-art', 'leverage', 'cutting-edge', or any similar buzzwords. Use simple, specific language grounded in the actual context.
      - Do not include any of the following words in the answer or any headings: “bullet points”, “markdown table”, “example”, or any descriptive labels referring to the format used.
      - **Do not** repeat the same ideas in slightly different wording.

    **Ensure the above rules are strictly followed without exception.**

    Combine the output of content_generation_task (which includes Title, Subtitle, IntroParagraph, ProblemStatement, Solution) with the FAQs (InternalFAQs, ExternalFAQs - both in Question and Answer format into a single, properly formatted JSON object.  
    You may ask a few relevant questions based on web search results too in order the enhance the FAQs and make them more recent or specific. Avoid numbering the questions in the FAQs.
    
    Final Output:
    Combine content_generation_json + the two sets of answers (internal + external) into the following JSON structure:

  expected_output: >
    The complete structured JSON object following the below format. DO NOT add extra fields or change key names.
    A complete JSON object containing the PR FAQ introduction along with two arrays—InternalFAQs and ExternalFAQs—each populated with an exhaustive list of questions and detailed, markdown-formatted answers using proper markdown-formatted tables, bullets, sub-bullets, bold or italics wherever necessary. Do not give simple one sentence answers. The JSON format should be:
    {{
      "Title": "Revolutionizing AI Assistants",
      "Subtitle": "Introducing the Next-Gen AI for Business Solutions",
      "IntroParagraph": "In today's digital age, businesses need smarter AI solutions to streamline workflows and improve efficiency. Our new AI assistant is here to revolutionize the way companies operate.",
      "ProblemStatement": "Many businesses struggle with automating repetitive tasks, improving customer support, and handling large volumes of inquiries efficiently.",
      "Solution": "Our AI assistant leverages cutting-edge NLP and machine learning to provide seamless automation, personalized responses, and real-time insights.",
      "Competitors": [
        {
          "name":"Amazon Rekognition", 
          "url":"https://docs.aws.amazon.com/rekognition/"
        }, 
        {
          "name":"Google Cloud Vision API", 
          "url":"https://cloud.google.com/vision/docs/detecting-safe-search"
        }
      ],
      "InternalFAQs": [
          {{
              "Question": "How does the AI assistant integrate with existing tools?",
              "Answer": "It seamlessly integrates with platforms like \n-Slack \n-Microsoft Teams \n-CRM systems via APIs."
          }},
          {{
              "Question": "What kind of training data is required?",
              "Answer": "The AI assistant can be **fine-tuned** with company-specific data for enhanced performance."
          }}
      ],
      "ExternalFAQs": [
          {{
              "Question": "Is the AI assistant secure?",
              "Answer": "In order to ensure data security we use:\n- End-to-end encryption \n- Regular security audits \n- Compliance with GDPR and CCPA."
          }},
          {{
              "Question": "What the features and their corresponding benefits of the product?",
              "Answer": "| Feature         | Benefit        |\n|------------------|----------------|\n| Auto-Generate    | Saves time     |\n| LLM-Driven       | Context aware  |"
          }},
          {{
              "Question": "Name the competitors and compare it with our product in table form.",
              "Answer": [
                {{"Name": "Markdown Table", "Feature": "Yes"}},
                {{"Name": "JSON Table", "Feature": "Yes"}}
              ]
          }}
      ],
      "UserResponse": "Here is the generated PR/FAQ document on topic and your provided inputs. Please review and let me know if any changes are needed."
    }}
    THE OUTPUT SHOULD BE STRICTLY IN JSON.
  agent: faq_answer_agent
